# Задание 3
"""
*(вместо задачи 2) Решить задачу 2, не создавая новый список (как говорят, in place). Эта задача намного серьёзнее,
чем может сначала показаться.
"""
"""
Задание 2
На вход будет выдаваться список, пример:
['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха',
'была', '+5', 'градусов']
a) Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до
и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
b) Сформировать из обработанного списка строку:
в "05" часов "17" минут температура воздуха была "+05" градусов
Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел
со знаком?
Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже.
Главное: дополнить числа до двух разрядов нулём!
"""


def convert_list_in_str(list_in: list) -> str:
    """Обособляет каждое целое число кавычками, добавляя кавычку до и после элемента
            списка, являющегося числом, и дополняет нулём до двух целочисленных разрядов.
            Формирует из списка результирующую строковую переменную и возвращает."""
    # пишите реализацию своей программы здесь
    i = 0
    while i < len(list_in):
        if list_in[i].isnumeric():
            i_str = list_in[i]
            list_in.insert(i, '\"')
            i += 1
            number_str = i_str
            if len(number_str) == 1:
                number_str = f'0{number_str}'
            list_in[i] = number_str
            i += 1
            list_in.insert(i, '\"')
        elif list_in[i][:1] in ["-", "+"] and list_in[i][1:].isnumeric():
            i_str = list_in[i]
            list_in.insert(i, '\"')
            i += 1
            number_str = i_str[1:]
            if len(number_str) == 1:
                number_str = f'{i_str[:1]}0{number_str}'
            else:
                number_str = f'{i_str[:1]}{number_str}'
            list_in[i] = number_str
            i += 1
            list_in.insert(i, '\"')
        else:
            pass
        i += 1

    print(f'list_in id:{id(list_in)}, list_in={list_in}')
    # the formation of the processed list has been debugged

    str_out = ' '.join(list_in)
    list_in = list(str_out)

    i = 0
    count = 0
    while i < len(list_in):
        if list_in[i] == '\"':
            count = 2
        if list_in[i] == " ":
            if count > 0:
                count -= 1
                del list_in[i]
                i += 1
        i += 1

    str_out = ''.join(list_in)
    return str_out  # здесь полученная после всех преобразования строковая переменная


my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
print(my_list)
result = convert_list_in_str(my_list)
print(result)
